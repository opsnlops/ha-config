
#
# This has been taken from the moonraker docs!
#  https://github.com/Arksine/moonraker/blob/master/docs/example-home-assistant.yaml
#
#  Credit to GitHub users @Kruppes and @pedrolamas
#

- platform: rest
  name: sable_sensor
  resource: "https://sable.opsnlops.io/printer/objects/query?heater_bed&extruder&print_stats&toolhead&display_status&virtual_sdcard"
  json_attributes_path: "$.result.status"
  json_attributes:
    - heater_bed
    - extruder
    - print_stats
    - toolhead
    - display_status
    - virtual_sdcard
  value_template: >-
    {{ 'OK' if ('result' in value_json) else None }}

- platform: template
  sensors:

    sable_hotend_target:
      friendly_name: 'Sable Hotend Target'
      device_class: temperature
      unit_of_measurement: '째C'
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['extruder']['target'] | float | round(1) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_hotend_actual:
      friendly_name: 'Sable Hotend Actual'
      device_class: temperature
      unit_of_measurement: '째C'
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['extruder']['temperature'] | float | round(1) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_bed_target:
      device_class: temperature
      unit_of_measurement: '째C'
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['heater_bed']['target'] | float | round(1) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_bed_actual:
      device_class: temperature
      unit_of_measurement: '째C'
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['heater_bed']['temperature'] | float | round(1) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_state:
      icon_template: mdi:printer-3d
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['print_stats']['state'] if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_current_print:
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['print_stats']['filename'] if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_current_progress:
      unit_of_measurement: '%'
      icon_template: mdi:file-percent
      value_template: >-
        {{ (states.sensor.sable_sensor.attributes['display_status']['progress'] * 100) | round(1) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_print_time:
      icon_template: mdi:clock-start
      value_template: >-
        {{ states.sensor.sable_sensor.attributes['print_stats']['print_duration'] | timestamp_custom("%H:%M:%S", 0) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_time_remaining:
      icon_template: mdi:clock-end
      value_template: >-
        {{ (((states.sensor.sable_sensor.attributes['print_stats']['print_duration'] / states.sensor.sable_sensor.attributes['display_status']['progress'] - states.sensor.sable_sensor.attributes['print_stats']['print_duration']) if states.sensor.sable_sensor.attributes['display_status']['progress'] > 0 else 0) | timestamp_custom('%H:%M:%S', 0)) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_eta:
      icon_template: mdi:clock-outline
      value_template: >-
        {{ (as_timestamp(now()) + 2 * 60 * 60 + ((states.sensor.sable_sensor.attributes['print_stats']['print_duration'] / states.sensor.sable_sensor.attributes['display_status']['progress'] - states.sensor.sable_sensor.attributes['print_stats']['print_duration']) if states.sensor.sable_sensor.attributes['display_status']['progress'] > 0 else 0)) | timestamp_custom("%H:%M:%S", 0) if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_nozzletemp:
      icon_template: mdi:thermometer
      value_template: >-
        {{ [(states.sensor.sable_sensor.attributes['extruder']['temperature'] | float | round(1) | string), " / ", (states.sensor.sable_sensor.attributes['extruder']['target'] | float | round(1) | string)] | join if is_state('sensor.sable_sensor', 'OK') else None }}

    sable_bedtemp:
      icon_template: mdi:thermometer
      value_template: >-
        {{ [(states.sensor.sable_sensor.attributes['heater_bed']['temperature'] | float | round(1) | string), " / ", (states.sensor.sable_sensor.attributes['heater_bed']['target'] | float | round(1) | string)] | join if is_state('sensor.sable_sensor', 'OK') else None }}