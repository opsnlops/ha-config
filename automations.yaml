- alias: "Run At Sunset 20 minutes before the actual sunset"
  trigger:
    platform: sun
    event: sunset
    offset: "-00:20:00"
  action:
    service: homeassistant.turn_on
    entity_id: scene.at_sunset

# Turn off the outside lights at sunrise
- alias: "Turn off the outside lights at sunrise"
  trigger:
    platform: sun
    event: sunrise
    offset: "00:20:00"
  action:
    service: homeassistant.turn_on
    entity_id: scene.at_sunrise

# If there's motion in the carport, and it's after 10:30pm, trigger
# a scene that makes the lights brighter
- alias: "Carport: Brighten the lights on outdoor motion at night"
  trigger:
    platform: state
    entity_id: binary_sensor.carport_motion
    to: "on"
  condition:
    condition: or
    conditions:
      - condition: time
        after: "22:30:00"
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: scene.carport_motion
# ...and turn it back off after the motion stops
- alias: "Carport: Go back to normal after five minutes"
  trigger:
    platform: state
    entity_id: binary_sensor.carport_motion
    to: "off"
    for:
      minutes: 5
  condition:
    condition: or
    conditions:
      - condition: time
        after: "22:30:00"
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: scene.sleepy_time

# Turn on the lights if someone comes home and it's after sunset
- alias: "Someone comes home"
  trigger:
    platform: state
    entity_id: group.all_furries
    to: "home"
  condition:
    condition: or
    conditions:
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
  action:
    service: homeassistant.turn_on
    entity_id: scene.normal_evening

# Trigger the "Away from Home" scene when we're all gone
- alias: "Everyone leaves the house"
  trigger:
    platform: state
    entity_id: group.all_furries
    to: "not_home"
  action:
    service: homeassistant.turn_on
    entity_id: scene.away_from_home

# Dim the outside lights around bedtime
- alias: "Dim the outside lights at sleep time"
  trigger:
    platform: time
    at: "22:30:00"
  action:
    service: homeassistant.turn_on
    entity_id: scene.sleepy_time

# Dim the lights at 9pm if I'm home
- alias: "Dim lights at 9:00pm"
  initial_state: true
  trigger:
    platform: time
    at: "21:00:00"
  condition:
    condition: and
    conditions:
      - condition: time
        weekday:
          - sun
          - mon
          - tue
          - wed
          - thu
      - condition: state
        entity_id: person.april
        state: home
  action:
    - service: scene.turn_on
      entity_id: scene.low_key

# Turn on the lights in the hallway bathroom when it's dark and motion is detected
- alias: Turn on the hallway bathroom stars if there's motion
  trigger:
    platform: state
    entity_id: binary_sensor.hallway_bathroom_motion
    to: "on"
  condition:
    condition: numeric_state
    entity_id: sensor.hallway_bathroom_luminance
    below: 10.0
  action:
    service: light.turn_on
    entity_id: light.hallway_bathroom_stars

- alias: Turn off the hallway bathroom stars once motion stops
  trigger:
    platform: state
    entity_id: binary_sensor.hallway_bathroom_motion
    to: "off"
    for:
      minutes: 15
  action:
    service: light.turn_off
    entity_id: light.hallway_bathroom_stars

# Push the value of the rain we got yesterday into a retained mqtt topic
- alias: "Push previous day rain total to MQTT"
  trigger:
    - platform: time
      at: "00:00:01"
  action:
    service: mqtt.publish
    data_template:
      topic: "internal/rain_in_prior"
      retain: true
      payload: "{{ states.sensor.rain_amount.state }}"

######################################3
#
# MQTT Events
#

# Living room
- alias: "MQTT - Living Room Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.living_room_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/living_room/motion"
      payload_template: "{{ states.binary_sensor.living_room_motion_sensor_motion.state }}"

- alias: "MQTT - Living Room Temperature"
  trigger:
    platform: state
    entity_id: "sensor.living_room_motion_sensor_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/living_room/temperature"
      payload_template: "{{ states.sensor.living_room_motion_sensor_temperature.state }}"

# Laundry room
- alias: "MQTT - Laundry Room Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.laundry_room_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/motion"
      payload_template: "{{ states.binary_sensor.laundry_room_motion.state }}"

- alias: "MQTT - Laundry Room Temperature"
  trigger:
    platform: state
    entity_id: "sensor.laundry_room_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/temperature"
      payload_template: "{{ states.sensor.laundry_room_temperature.state }}"

- alias: "MQTT - Laundry Room Room Humidity"
  trigger:
    platform: state
    entity_id: "sensor.laundry_room_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/laundry_room/humidity"
      payload_template: "{{ states.sensor.laundry_room_relative_humidity.state }}"

# Bedroom
- alias: "MQTT - Bedroom Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.bedroom_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/bedroom/motion"
      payload_template: "{{ states.binary_sensor.bedroom_motion_sensor_motion.state }}"

- alias: "MQTT - Bedroom Temperature"
  trigger:
    platform: state
    entity_id: "sensor.bedroom_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/bedroom/temperature"
      payload_template: "{{ states.sensor.bedroom_temperature.state }}"

# Half Bathroom
- alias: "MQTT - Half Bathroom Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.half_bathroom_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/half_bathroom/motion"
      payload_template: "{{ states.binary_sensor.half_bathroom_motion.state }}"

- alias: "MQTT - Half Bathroom Temperature"
  trigger:
    platform: state
    entity_id: "sensor.half_bathroom_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/half_bathroom/temperature"
      payload_template: "{{ states.sensor.half_bathroom_temperature.state }}"

- alias: "MQTT - Half Bathroom Room Humidity"
  trigger:
    platform: state
    entity_id: "sensor.half_bathroom_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/half_bathroom/humidity"
      payload_template: "{{ states.sensor.half_bathroom_relative_humidity.state }}"

# Hallway Bathroom
- alias: "MQTT - Hallway Bathroom Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.hallway_bathroom_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/hallway_bathroom/motion"
      payload_template: "{{ states.binary_sensor.hallway_bathroom_motion.state }}"

- alias: "MQTT - Hallway Bathroom Temperature"
  trigger:
    platform: state
    entity_id: "sensor.hallway_bathroom_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/hallway_bathroom/temperature"
      payload_template: "{{ states.sensor.hallway_bathroom_temperature.state }}"

- alias: "MQTT - Hallway Bathroom Room Humidity"
  trigger:
    platform: state
    entity_id: "sensor.hallway_bathroom_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/hallway_bathroom/humidity"
      payload_template: "{{ states.sensor.hallway_bathroom_relative_humidity.state }}"

# Office
- alias: "MQTT - Office Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.office_motion_sensor_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/office/motion"
      payload_template: "{{ states.binary_sensor.office_motion_sensor_motion.state }}"

- alias: "MQTT - Office Temperature"
  trigger:
    platform: state
    entity_id: "sensor.office_motion_sensor_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/office/temperature"
      payload_template: "{{ states.sensor.office_motion_sensor_temperature.state }}"

# Kitchen
- alias: "MQTT - Kitchen Motion"
  trigger:
    platform: state
    entity_id: "binary_sensor.kitchen_motion"
  action:
    service: mqtt.publish
    data:
      topic: "home/kitchen/motion"
      payload_template: "{{ states.binary_sensor.kitchen_motion.state }}"

- alias: "MQTT - Kitchen Temperature"
  trigger:
    platform: state
    entity_id: "sensor.kitchen_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/kitchen/temperature"
      payload_template: "{{ states.sensor.kitchen_temperature.state }}"

- alias: "MQTT - Kitchen Humidity"
  trigger:
    platform: state
    entity_id: "sensor.kitchen_relative_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/kitchen/humidity"
      payload_template: "{{ states.sensor.kitchen_relative_humidity.state }}"

# Outside
- alias: "MQTT - Outside Temperature"
  trigger:
    platform: state
    entity_id: "sensor.outside_temperature"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/temperature"
      payload_template: "{{ states.sensor.outside_temperature.state }}"

- alias: "MQTT - Outside Humidity"
  trigger:
    platform: state
    entity_id: "sensor.outside_humidity"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/humidity"
      payload_template: "{{ states.sensor.outside_humidity.state }}"

- alias: "MQTT - Outside Wind Avgerage"
  trigger:
    platform: state
    entity_id: "sensor.wind_speed_avg"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/wind_average"
      payload_template: "{{ states.sensor.wind_speed_avg.state }}"

- alias: "MQTT - Outside Wind Bearing"
  trigger:
    platform: state
    entity_id: "sensor.wind_bearing"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/wind_bearing"
      payload_template: "{{ states.sensor.wind_bearing.state }}"

- alias: "MQTT - Outside Wind Direction"
  trigger:
    platform: state
    entity_id: "sensor.wind_direction"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/wind_direction"
      payload_template: "{{ states.sensor.wind_direction.state }}"

- alias: "MQTT - Outside Conditions"
  trigger:
    platform: state
    entity_id: "weather.april_s_nest"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/conditions"
      payload_template: "{{ states.weather.april_s_nest.state }}"

- alias: "MQTT - Outside Sun"
  trigger:
    platform: state
    entity_id: "sun.sun"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/sun"
      payload_template: "{{ states.sun.sun.state }}"

- alias: "MQTT - Outside Air Quailty"
  trigger:
    platform: state
    entity_id: "sensor.airnow_aqi"
  action:
    service: mqtt.publish
    data:
      topic: "home/outside/air_quality"
      payload_template: "{{ states.sensor.airnow_aqi.state }}"

## Things!

# Living Room Heater
- alias: "MQTT - Living Room Heater State"
  trigger:
    platform: state
    entity_id: "switch.living_room_heater"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/heater/state"
      payload_template: "{{ states.switch.living_room_heater.state }}"

- alias: "MQTT - Living Room Heater Power"
  trigger:
    platform: state
    entity_id: "sensor.living_room_heater_power"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/heater/power"
      payload_template: "{{ states.sensor.living_room_heater_power.state }}"

# Bedroom Fan
- alias: "MQTT - Bedroom Fan State"
  trigger:
    platform: state
    entity_id: "switch.bedroom_fan"
  action:
    service: mqtt.publish
    data:
      topic: "thing/bedroom/fan/state"
      payload_template: "{{ states.switch.bedroom_fan.state }}"

- alias: "MQTT - Bedroom Fan Power"
  trigger:
    platform: state
    entity_id: "sensor.bedroom_fan_power"
  action:
    service: mqtt.publish
    data:
      topic: "thing/bedroom/fan/power"
      payload_template: "{{ states.sensor.bedroom_fan_power.state }}"

- alias: "MQTT - Everyone Home"
  trigger:
    platform: state
    entity_id: "group.all_furries"
  action:
    service: mqtt.publish
    data:
      topic: "people/furries/home"
      payload_template: "{{ states.group.all_furries.state }}"

- alias: "MQTT - Living Room TV"
  trigger:
    platform: state
    entity_id: "media_player.living_room_tv"
  action:
    service: mqtt.publish
    data:
      topic: "thing/living_room/tv/state"
      payload_template: "{{ states.media_player.living_room_tv.state }}"

- alias: "MQTT - Work Computer Camera"
  trigger:
    platform: state
    entity_id: "binary_sensor.april_s_work_mac_mini_camera_in_use"
  action:
    service: mqtt.publish
    data:
      topic: "thing/office/computer_camera/state"
      payload_template: "{{ states.binary_sensor.april_s_work_mac_mini_camera_in_usestate }}"

- alias: "MQTT - Work Computer Microphone"
  trigger:
    platform: state
    entity_id: "binary_sensor.april_s_work_mac_mini_microphone_in_use"
  action:
    service: mqtt.publish
    data:
      topic: "thing/office/computer_microphone/state"
      payload_template: "{{ states.binary_sensor.april_s_work_mac_mini_microphone_in_use.state }}"

######
#
# Alerts
#

- alias: "Alert - Entryway Door"
  id: "alert_entryway_door"
  trigger:
    platform: state
    entity_id: binary_sensor.entryway_door
  action:
    service: notify.aprils_devices
    data_template:
      title: "{{ trigger.to_state.name }}"
      data:
        push:
          sound: "shake.caf"
      message: >-
        {% if trigger.to_state.state == 'on' %}
          Someone opened the Entryway Door
        {% else %}
          Someone closed the Entryway Door
        {% endif %}

- alias: "Alert - UPS Changed State"
  id: "alert_ups_changed_state"
  trigger:
    platform: state
    entity_id:
      - "sensor.belgian_hare_ups_status"
      - "sensor.network_ups_status"
      - "sensor.office_ups_status"
  action:
    service: notify.aprils_devices
    data:
      title: "{{ trigger.to_state.name }}"
      message: "New State: {{ trigger.to_state.state }}"
      data:
        push:
          sound: "shake.caf"

#######
#
# Inovelli Switch LED Notifications
#
#  See https://nathanfiscus.github.io/inovelli-notification-calc/
#

# Make the light on the switch next to the half bathroom red
# if there's someone in the bathroom
# Half Bathroom
- alias: "Notification - Half Bath Occupied"
  trigger:
    platform: state
    entity_id: "binary_sensor.half_bathroom_motion"
    to: "on"
  action:
    service: zwave.set_config_parameter
    data:
      node_id: 18
      parameter: 8
      value: 72353534
- alias: "Notification - Half Bath Empty"
  trigger:
    platform: state
    entity_id: "binary_sensor.half_bathroom_motion"
    to: "off"
    for: "00:00:15"
  action:
    service: zwave.set_config_parameter
    data:
      node_id: 18
      parameter: 8
      value: 67326

# Send a notifcation when the front door unlocks
- alias: "Notification - Front Door Unlocked"
  trigger:
    platform: state
    entity_id:
      - "lock.front_door"
      - "lock.back_door"
    to: "unlocked"
  action:
    - service: zwave.set_config_parameter
      data:
        node_id: 18
        parameter: 8
        value: 68094506
    - service: zwave.set_config_parameter
      data:
        node_id: 20
        parameter: 16
        value: 34474539
    - service: zwave.set_config_parameter
      data:
        node_id: 21
        parameter: 16
        value: 34474539
    - service: zwave.set_config_parameter
      data:
        node_id: 22
        parameter: 16
        value: 34474539
    - service: zwave.set_config_parameter
      data:
        node_id: 24
        parameter: 16
        value: 34474539
    - service: zwave.set_config_parameter
      data:
        node_id: 28
        parameter: 24
        value: 68094507
    - service: zwave.set_config_parameter
      data:
        node_id: 29
        parameter: 8
        value: 68094506
    - service: zwave.set_config_parameter
      data:
        node_id: 30
        parameter: 8
        value: 68094506

# Scene controllers
- alias: "Set Kitchen Cleanup"
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.kitchen_scene_controller
      scene_id: 1
  action:
    service: homeassistant.turn_on
    entity_id: scene.kitchen_cleanup
- alias: "Set Normal Evening"
  trigger:
    platform: event
    event_type: zwave.scene_activated
    event_data:
      entity_id: zwave.kitchen_scene_controller
      scene_id: 2
  action:
    service: homeassistant.turn_on
    entity_id: scene.normal_evening

#######
#
# Buttons
#
#  These are the buttons around the house that make things do things
#

# Top Button (On)
- alias: "Top Short Press: Normal Evening Button"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 1002
  action:
    service: homeassistant.turn_on
    entity_id: scene.normal_evening
- alias: "Top Long Press: Low Key Button"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 1003
  action:
    service: homeassistant.turn_on
    entity_id: scene.low_key

# Second Button (🔆)
- alias: "Second: Turn on the aurora"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 2002
  action:
    service: script.lzw45_pixel_effect
    data:
      service: zwave.set_config_parameter
      lzw45: light.workshop_light_strip
      effect: aurora
      brightness_pct: 99

# Third Button (🔅)
- alias: "Short Press: Mute the Family Room Receiver"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 3002
  action:
    service: media_player.volume_mute
    data:
      is_volume_muted: true
    target:
      entity_id: media_player.family_room_receiver
- alias: "Long Press: Unmute the Family Room Receiver"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 3003
  action:
    service: media_player.volume_mute
    data:
      is_volume_muted: false
    target:
      entity_id: media_player.family_room_receiver

# Bottom Button (Off)
- alias: "Bedtime Button"
  initial_state: on
  trigger:
    - platform: event
      event_type: deconz_event
      event_data:
        id: "test_switch"
        event: 4002
  action:
    service: homeassistant.turn_on
    entity_id: scene.goodnight
